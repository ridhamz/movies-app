{"version":3,"sources":["components/common/listGroup.jsx","components/common/pagination.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","utils/paginate.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/searchBox.jsx","components/movies.jsx","components/rentals.jsx","components/customers.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["ListGroup","props","items","textProperty","valueProperty","selectedItem","onItemSelect","className","map","item","key","onClick","Pagination","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","page","prototype","propTypes","number","isRequired","func","init","log","error","console","axios","defaults","baseURL","proxyurl","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","getMovieUrl","id","getMovie","movieId","http","deleteMovie","saveMovie","movie","_id","body","getGenres","paginate","pageNumber","startIndex","slice","take","value","Like","classes","liked","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","index","label","Component","TableBody","renderCell","content","createKey","data","Table","movies","login","email","password","a","localStorage","setItem","getCurrentUser","getItem","jwtDecode","ex","loginWithJwt","MoviesTable","to","title","onLike","user","isAdmin","push","onDelete","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","selectedGenre","searchQuery","handleDelete","originalMovies","filter","m","setState","handleLike","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","filtred","toLowerCase","startsWith","allMovies","orderBy","totalCount","length","count","marginBottom","Rentals","Customers","NotFound","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","min","max","history","match","params","mapTopViewModel","replace","populateGenre","populateMovie","onSubmit","renderInput","renderSelect","renderButton","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","LoginForm","username","location","window","from","pathname","ro","register","RegistreForm","Logout","removeItem","ProtectedRoute","component","render","App","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ffe80cd8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ListGroup = (props) => {\r\n    const { \r\n           items, \r\n           textProperty, \r\n           valueProperty,\r\n           selectedItem,\r\n           onItemSelect\r\n           } = props;\r\n    return (\r\n    <ul className=\"pagination\">\r\n      { items.map(item => (\r\n          <li \r\n             key={item[valueProperty]}\r\n             className={\r\n                   item === selectedItem ? \"page-item  active\" :\"page-item \"\r\n                 }\r\n             >\r\n             <a\r\n               onClick={()=>onItemSelect(item)}\r\n               className='page-link'\r\n               >\r\n             {item[textProperty]}\r\n             </a>\r\n          </li>\r\n      )) }\r\n </ul>\r\n    )\r\n}\r\n \r\nexport default ListGroup;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Pagination = (props) => {\r\n    const {\r\n            itemsCount, \r\n            pageSize,\r\n            currentPage,\r\n            onPageChange\r\n            } = props\r\n    const pageCount = Math.ceil(itemsCount / pageSize);\r\n    if(pageCount === 1) return null;\r\n    const pages = _.range(1,pageCount+1);\r\n\r\n    return (\r\n        <nav >\r\n         <ul className=\"pagination\">\r\n         {pages.map(page => (\r\n             <li key={page} \r\n                 className={page === currentPage ? 'page-item active' :'page-item' }\r\n                 >\r\n              <a \r\n                onClick={()=>onPageChange(page)}\r\n                className=\"page-link\"\r\n                >\r\n                {page}\r\n                </a>\r\n             </li>\r\n         ))}\r\n         \r\n  </ul>\r\n</nav>\r\n    )\r\n}\r\n\r\nPagination.prototype = {\r\n  itemsCount :propTypes.number.isRequired,\r\n  pageSize :propTypes.number.isRequired,\r\n  currentPage :propTypes.number.isRequired,\r\n  onPageChange :propTypes.func.isRequired\r\n};\r\n \r\nexport default Pagination;","//import Raven from \"raven-js\";\n\nfunction init() {\n  // Raven.config(\"ADD YOUR OWN API KEY\", {\n  //   release: \"1-0-0\",\n  //   environment: \"development-test\"\n  // }).install();\n}\n\nfunction log(error) {\n  console.error(error);\n  // Raven.captureException(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\nconst proxyurl = \"https://cors-anywhere.herokuapp.com\";\n\naxios.defaults.baseURL = proxyurl +'/' + \"https://mz-movies-node-api.herokuapp.com/api\"\n\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt){\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from './httpService';\r\n//import { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction getMovieUrl(id){\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies(){\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId){\r\n  return http.get(getMovieUrl(movieId));\r\n}\r\n\r\nexport function deleteMovie(movieId){\r\n  return http.delete(getMovieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie){\r\n    if(movie._id){\r\n      const body = {...movie};\r\n      delete body._id;\r\n      return http.put(getMovieUrl(movie._id), body)\r\n    }\r\n   return http.post(apiEndpoint,movie);\r\n}","import http from './httpService';\r\n//import config from '../config.json';\r\n\r\n\r\nexport function getGenres() {\r\n  return http.get('/genres');\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize){\r\n   const startIndex = (pageNumber - 1) * pageSize;\r\n   //_.slice(items, startIndex);\r\n   return _(items)\r\n            .slice(startIndex)\r\n            .take(pageSize)\r\n            .value();\r\n}","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path =>{\r\n     const sortColumn = {...this.props.sortColumn};\r\n     if(sortColumn.path === path)\r\n       sortColumn.order = (sortColumn.order === 'asc') ? 'desc': 'asc';\r\n     else {\r\n       sortColumn.path = path;\r\n       sortColumn.order = 'asc'\r\n     }  \r\n     this.props.onSort( sortColumn );\r\n   }\r\n\r\n   renderSortIcon = column => {\r\n       const { sortColumn } = this.props;\r\n       if(column.path !== sortColumn.path) return null\r\n       if(sortColumn.order === 'asc') return <i className='fa fa-sort-asc' />\r\n       return <i className='fa fa-sort-desc' />\r\n   }\r\n\r\n    render() { \r\n        return ( \r\n         <thead>\r\n            <tr>\r\n             {\r\n                 this.props.columns.map((column,index) => (\r\n                     <th style={{cursor:'pointer'}}\r\n                       key={index}\r\n                       onClick={()=>this.raiseSort(column.path)}\r\n                     >\r\n                     {column.label} {this.renderSortIcon(column)}\r\n                     </th>\r\n                 ))\r\n             }\r\n              <th />\r\n            </tr>\r\n          </thead> );\r\n    }\r\n}\r\n  \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item, column) => {\r\n        if(column.content) return column.content(item)\r\n        return _.get(item,column.path)\r\n    }\r\ncreateKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n}\r\n\r\n    render() { \r\n        const { \r\n            data,\r\n            columns\r\n         } = this.props;\r\n        return ( \r\n            <tbody>\r\n            { \r\n                data.map(item =>(\r\n                  <tr key={item._id}>\r\n                   {\r\n                       columns.map(column =>(\r\n                           <td key={this.createKey(item,column) }>\r\n                             {this.renderCell(item,column)}\r\n                           </td>\r\n                        ))\r\n                   }\r\n                 </tr>\r\n                ))\r\n            }\r\n            \r\n            </tbody>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TatbleHeader from \"./tableHeader\";\r\nimport TableBody from './tableBody'\r\n\r\nconst Table = ({ columns, sortColumn, onSort, movies } ) => {\r\n    return ( \r\n        <table className=\"table\">\r\n          <TatbleHeader \r\n            columns={columns}\r\n            sortColumn={sortColumn}\r\n            onSort={onSort}\r\n          />\r\n         <TableBody \r\n           columns={columns}\r\n           data={movies}\r\n         />\r\n        </table>\r\n     );\r\n}\r\n \r\nexport default Table;","import http from './httpService';\r\n//import { apiUrl } from '../config.json';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nconst apiEndpoint = \"/auth\";\r\n\r\nhttp.setJwt(getJwt())\r\n\r\nexport async function login(email, password){\r\n    const { data: jwt } = await http.post(apiEndpoint,{email, password})\r\n    localStorage.setItem('token',jwt);\r\n}\r\n\r\nexport  function logout(){\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try{\r\n    const jwt = localStorage.getItem('token');\r\n    const user = jwtDecode(jwt);\r\n    return user;\r\n     }\r\n     catch(ex)\r\n       { \r\n         return null;\r\n        }\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem('token',jwt);\r\n}\r\n\r\nexport function getJwt(){\r\n    return localStorage.getItem('token');\r\n}","import React, {Component} from 'react';\r\nimport Like from \"./common/like\";\r\nimport Table from './common/table';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentUser } from '../services/authService';\r\n\r\nclass MoviesTable extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    const user = getCurrentUser();\r\n    if(user && user.isAdmin)\r\n    this.columns.push(\r\n      { \r\n       key: 'delete',\r\n       content:movie => <button\r\n                       onClick={()=>this.props.onDelete(movie)}  \r\n                       className='btn btn-danger btn-sm'\r\n                >\r\n                delete\r\n                </button>\r\n       }\r\n    )\r\n  }\r\n   columns = [\r\n     { path: 'title', label: 'Title', content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>},\r\n     { path: 'genre.name', label: 'Genre'},\r\n     { path: 'numberInStock', label: 'Stock'},\r\n     //{ path: 'dailyRentalRate', label: 'Rate'},\r\n     {\r\n        key: 'like', \r\n        content:movie => <Like \r\n                       liked={movie.liked} \r\n                       onClick={()=>this.props.onLike(movie)}\r\n                  />\r\n        },\r\n     \r\n   ]\r\n   \r\n  render(){\r\n   const {\r\n     movies,\r\n     sortColumn,\r\n     onSort\r\n   } = this.props;\r\n\r\n    return ( \r\n      <Table \r\n        movies={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        columns={this.columns}\r\n      />\r\n        \r\n     );\r\n}}\r\n \r\nexport default MoviesTable;","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n    return ( \r\n        <input \r\n          type=\"text\"\r\n          name=\"query\"\r\n          className=\"form-control my-3\"\r\n          placeholder=\"Search...\"\r\n          value={value}\r\n          onChange={e => onChange(e.currentTarget.value)}\r\n          />\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import React, { Component } from \"react\";\nimport ListGroup from './common/listGroup';\nimport Pagination from './common/pagination';\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from '../services/genreService';\nimport { paginate } from '../utils/paginate';\nimport MoviesTable from './moviesTable';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport SearchBox from \"./common/searchBox\";\nimport {toast} from 'react-toastify';\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize :4,\n    selectedGenre:null,\n    searchQuery: \"\",\n    sortColumn: {path:'title',order: 'asc'},\n  };\n\n  async componentDidMount(){\n    const { data } = await getGenres(); \n    const genres = [{name:'All Genres',_id:''},...data]\n\n    const { data: movies }  = await getMovies();\n    this.setState({ genres, movies }\n        );\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n     try{\n        await deleteMovie(movie._id)\n        toast(\"Movie deleted successfully\");\n     }catch(ex){\n          if(ex.response && ex.response.status === 404)\n           toast.error('This movie has already been deleted');\n\n           this.setState({ movies: originalMovies });\n     }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n   \n   handlePageChange = page =>{\n     this.setState({currentPage:page});\n   }\n\n   handleGenreSelect = genre =>{\n     this.setState({ selectedGenre: genre, currentPage:1, searchQuery:\"\" });\n   }\n\n   handleSearch = query =>{\n     this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 })\n   }\n\n   handleSort = sortColumn =>{\n      this.setState({sortColumn})\n   } \n\n   getPageData = () => {\n     const { \n            pageSize,\n            currentPage, \n            movies, \n            selectedGenre,\n            searchQuery,\n            sortColumn\n            } = this.state;\n     let filtred = movies\n     if(searchQuery)\n     filtred = movies.filter( m => \n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n        );\n      else if (selectedGenre && selectedGenre._id )\n        filtred = movies.filter(m => m.genre._id === selectedGenre._id)\n        \n    const sorted = _.orderBy(filtred,[sortColumn.path],[sortColumn.order]);\n    const allMovies = paginate(sorted,currentPage,pageSize);\n    \n    return { totalCount: filtred.length, data: allMovies }\n   }\n\n   \n\n\n  render() {\n    const { user } = this.props;\n    const { length: count } = this.state.movies;\n    const { \n            pageSize,\n            currentPage, \n            sortColumn,\n            searchQuery\n            } = this.state;\n        \n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n      \n      const { totalCount, data } = this.getPageData()\n\n    return (\n      <div className=\"row\">\n      <div className=\"col\">\n         <ListGroup \n             items={this.state.genres}\n             textProperty=\"name\"\n             valueProperty=\"_id\"\n             selectedItem={this.state.selectedGenre}\n             onItemSelect={this.handleGenreSelect}\n          />\n          \n          {user &&\n           <Link \n             to=\"/movies/new\"\n             className=\"btn btn-primary btn-sm\"\n             style= {{ marginBottom: 20 }} \n            >\n            New Movie\n            </Link>\n            }\n          \n         <p>Showing {totalCount} movies in the database.</p>\n\n         <SearchBox value={searchQuery} onChange={this.handleSearch}  />\n        \n        <MoviesTable \n           movies={data}\n           sortColumn={sortColumn}\n           onDelete={this.handleDelete}\n           onLike={this.handleLike}\n           onSort={this.handleSort}\n        />\n        <Pagination \n           itemsCount={totalCount}\n           pageSize={pageSize}\n           currentPage={currentPage}\n           onPageChange={this.handlePageChange}\n            />\n       </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React, { Component } from 'react';\r\nclass Rentals extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <h1>Rentals</h1>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Rentals;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( \r\n        <h1>Customers</h1>\r\n     );\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <h1>Not Found...</h1>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\r\n\r\nconst Input = ( { name, label, error, ...rest } ) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                   {...rest}\r\n                   id={name}\r\n                   name={name}\r\n                   className=\"form-control\" \r\n            />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <select name={name} id={name} {...rest} className=\"form-control\">\r\n           <option value=\"\" />\r\n            {options.map(option =>(\r\n                <option key={option._id} value={option._id}>\r\n                 {option.name}\r\n                </option>\r\n            ))}\r\n          </select>\r\n          {error && <div className=\"aler alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Select;","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { toast } from 'react-toastify';\r\nimport { getGenres } from '../services/genreService';\r\nimport { getMovie, saveMovie } from '../services/movieService';\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: {\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\"\r\n        },\r\n        genres: [],\r\n        errors: {}\r\n    }\r\n     \r\n     schema = {\r\n         _id: Joi.string(),\r\n         title: Joi.string()\r\n            .required()\r\n            .label('Title'),\r\n         genreId: Joi.string()\r\n            .required()\r\n            .label('Genre'),\r\n         numberInStock: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(100)\r\n            .label('Number in stock'),\r\n         dailyRentalRate : Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(10)\r\n            .label('Daily Rental Rate')       \r\n     };\r\n\r\n      async populateGenre () {\r\n       const {data: genres} = await getGenres();\r\n        this.setState({ genres });\r\n\r\n    }\r\n\r\n    async populateMovie (){\r\n         try{\r\n             const movieId = this.props.match.params.id ;\r\n             if(movieId === \"new\") return ;\r\n             const {data: movie} = await getMovie(movieId);\r\n             this.setState({ data: this.mapTopViewModel(movie) })\r\n         }catch(ex){\r\n             if(ex.response && ex.response.status === 404)\r\n             this.props.history.replace(\"/not-found\");\r\n         }\r\n    }\r\n\r\n     async componentDidMount(){\r\n        await this.populateGenre();\r\n        await this.populateMovie()\r\n     }\r\n     \r\n     mapTopViewModel(movie) {\r\n         return {\r\n             _id : movie._id,\r\n             title: movie.title,\r\n             genreId: movie.genre._id,\r\n             numberInStock: movie.numberInStock,\r\n             dailyRentalRate: movie.dailyRentalRate\r\n         };\r\n     }\r\n\r\n     doSubmit = async () => {\r\n         const { data } = this.state;\r\n         try{\r\n         await saveMovie(data);\r\n         toast(\"Done with successfully\");\r\n         this.props.history.push(\"/movies\");\r\n         }catch(ex){\r\n         toast.error(ex.response.data);\r\n         }\r\n         \r\n     }\r\n     \r\n    render() { \r\n        return (\r\n            <div>\r\n               <h1>Movie Form</h1>\r\n               <form onSubmit={this.handleSubmit}>\r\n               {this.renderInput(\"title\",\"Title\",\"text\")}\r\n               {this.renderSelect(\"genreId\",\"Genre\",this.state.genres)}\r\n               {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n               {this.renderInput(\"dailyRentalRate\",\"Rate\",\"number\")}\r\n               {this.renderButton('Save')}\r\n               </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <Link className=\"navbar-brand btn  btn-sm m-0\" to=\"/\">\n        MoviesApp\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n       \n            <React.Fragment>\n            <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n            Movies\n           </NavLink>\n            </React.Fragment>\n            { user &&\n           <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n            Logout\n           </NavLink>\n          }\n          { !user &&\n            <React.Fragment>\n            <NavLink className=\"nav-item nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">\n            Register\n          </NavLink>\n          </React.Fragment>\n          }\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React  from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login, getCurrentUser } from '../services/authService';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass LoginForm extends Form {\r\n\r\n    state = {\r\n        data: {username: '', password: ''},\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n            .required()\r\n            .label('Username'),\r\n        password: Joi.string()\r\n            .required()\r\n            .label('Password')\r\n    }\r\n\r\n   \r\n\r\n    doSubmit = async() =>{\r\n        const { username, password } = this.state.data;\r\n        try{\r\n         await login(username, password);\r\n        this.setState({data:{username: \"\",password:\"\"}})\r\n        toast(\"welcome!\")\r\n         const { state } = this.props.location;\r\n        window.location = state ? state.from.pathname : \"/\";\r\n        }catch(ex){\r\n            if(ex.response && ex.response.status === 400){\r\n             const error = ex.response.data;\r\n             toast.error(error);\r\n            }\r\n        }\r\n    }\r\n    \r\n   \r\n    render() { \r\n        if(getCurrentUser()) return <Redirect ro=\"/\" />;\r\n        return ( \r\n           <div>\r\n             <h1>Login</h1>\r\n               <form onSubmit={this.handleSubmit}>\r\n                {this.renderInput('username','Username','text')}\r\n                {this.renderInput('password','Password','password')}\r\n                {this.renderButton('Login')}       \r\n               </form>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import http from './httpService';\r\n//import { apiUrl } from '../config.json';\r\n//import { toast } from 'react-toastify';\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\n/*function getUserUrl(id){\r\n    return `${apiEndpoint}/${id}`;\r\n}*/\r\n\r\nexport function register(user){\r\n    return http.post(apiEndpoint,{\r\n        email: user.username,\r\n        name: user.name,\r\n        password: user.password\r\n    })\r\n}\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { toast } from 'react-toastify';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { register } from '../services/userService';\r\nimport { loginWithJwt , getCurrentUser } from '../services/authService';\r\n\r\nclass RegistreForm extends Form {\r\n    state = { \r\n        data : {username: \"\", password: \"\", name:\"\"},\r\n        errors: {}\r\n     }\r\n\r\n     schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async() => {\r\n     try{\r\n     const response = await register(this.state.data)\r\n     this.setState({data:{username: \"\", name: \"\", password: \"\"}})\r\n     loginWithJwt(response.headers['x-auth-token']);\r\n     toast('User added successfully .');\r\n     window.location = '/';\r\n     }catch(ex){\r\n       if(ex.response && ex.response.status === 400){\r\n         /*\r\n         const errors = {...this.state.errors}\r\n         errors.username = ex.response.data;\r\n         this.setState({ errors })*/\r\n         const error = ex.response.data;\r\n         return toast.error(error);\r\n       }\r\n     }\r\n  };\r\n    render() { \r\n       if(getCurrentUser()) return <Redirect ro=\"/\" />;\r\n        return ( \r\n            <div>\r\n             <h1>Registre</h1>\r\n               <form onSubmit={this.handleSubmit}>\r\n                {this.renderInput('username','Username','text')}\r\n                {this.renderInput('name','Name','text')}\r\n                {this.renderInput('password','Password','password')}\r\n                {this.renderButton('Register')}       \r\n               </form>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default RegistreForm;","import { Component } from 'react';\r\nimport { logout } from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        logout();\r\n        window.location = '/login';\r\n    }\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { getCurrentUser } from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n    return ( \r\n        <Route \r\n            path={path}\r\n            {...rest}\r\n            render={props => {\r\n              if(!getCurrentUser()) return <Redirect to={{\r\n                  pathname: '/login',\r\n                  state: { from: props.location }\r\n              }} />\r\n              return  Component ? <Component {...props}  /> : render(props);\r\n              }}\r\n         />\r\n     );\r\n}\r\n \r\nexport default ProtectedRoute;","import React, { Component } from \"react\";\nimport Movies from \"./components/movies\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Rentals from \"./components/rentals\";\nimport Customers from \"./components/customers\";\nimport NotFound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForm\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegistreForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport { getCurrentUser } from \"./services/authService\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = getCurrentUser();\n    console.log(user);\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/movies-app\" exact component={Movies} />\n            <Route path=\"/register\" component={RegistreForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            {/*\n        this is first way to protect react router\n       <Route \n            path=\"/movies/:id\" \n            render={props => {\n              if(!user) return <Redirect to=\"/login\" />\n              return <MovieForm {...props}  />\n              }}\n         />\n         */}\n            {/* this is second way : */}\n\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/movies\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n       <App />\n    </BrowserRouter>, \n    document.getElementById(\"root\"));\n    registerServiceWorker();\n"],"sourceRoot":""}